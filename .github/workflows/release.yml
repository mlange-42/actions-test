name: Rust

on:
  release:
    types: [ created ]

env:
  CARGO_TERM_COLOR: always
  REPO: actions-test

jobs:
  release:
    name: Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: actions-test-$tag-ubuntu-latest.tar.gz
            asset_name: actions-test-$tag-linux-amd64.tar.gz
          - os: windows-latest
            artifact_name: actions-test-$tag-windows-latest.tar.gz
            asset_name: actions-test-$tag-windows-amd64.tar.gz
          - os: macos-latest
            artifact_name: actions-test-$tag-macos-latest.tar.gz
            asset_name: actions-test-$tag-macos-amd64.tar.gz

    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          cargo build --release
          rm -rf ${REPO} || exit 0
          mkdir ${REPO}
          if (( "$matrix.os" == "macos-latest" )); then cp -f target/release/actions-test ${REPO} > /dev/null; fi
          if (( "$matrix.os" == "ubuntu-latest" )); then cp -f target/release/actions-test ${REPO} > /dev/null; fi
          if (( "$matrix.os" == "windows-latest" )); then cp -f target/release/actions-test.exe ${REPO} > /dev/null; fi
          tar -czf $REPO-$tag-$matrix.os.tar.gz $REPO
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
